const { SlashCommandBuilder } = require('@discordjs/builders');
const { MessageActionRow, MessageButton } = require('discord.js');

const Profile = require(`${__main}/schemas/Profile.js`);
const GuildSettings = require(`${__main}/schemas/GuildSettings.js`);

module.exports.help = {
  name: "balance",
  description: "_–ö—Ä—á —Ç—É—Ç–∞ –º–æ–∂–Ω–∞ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç–± —Å–∫–æ–ª—å–∫–∞ —É —Ç–∏–±—è –¥–µ–Ω—è—Ö –∏ —Ç—É—Ç–∞ –µ—â–µ –º–æ–∂–Ω–∞ –¥–æ–±–∞–≤–∏—Ç—å –∏ —É–±–∞–≤–∏—Ç—å –¥–µ–Ω—è—Ö, –≤–æ–æ–æ—Ç._"
  + `\n${icons.options} **–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã:**`
  + "\n„Éª**\`target\`** _(–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –±–µ–∑ —ç—Ç–æ–π –æ–ø—Ü–∏–∏ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –∫–æ–º–∞–Ω–¥—É)_"
  + "\n„Éª**\`add\`** _(–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º)_"
  + "\n„Éª**\`remove\`** _(–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º)_"
};

module.exports.init = (slashCommand, commandDataArray) => {
  slashCommand.addSubcommand(subcommand =>
    subcommand
    .setName('balance')
    .setDescription('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
    .addStringOption(option => option.setName('add').setDescription('–°–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å.\nüõ° –ù—É–∂–Ω–∞ —Ä–æ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º!'))
    .addStringOption(option => option.setName('remove').setDescription('–°–∫–æ–ª—å–∫–æ —É–¥–∞–ª–∏—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞.\nÔ∏èüõ° –ù—É–∂–Ω–∞ —Ä–æ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º!'))
    .addUserOption(option => option.setName('target').setDescription('–ù–∞ –∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.'))
  );
  commandDataArray.push({
    name: "balance",
    command: editBalance_Subcommand
  });
};


// === /// === /// === // === === === //


const showBalance_Subcommand = async (interaction) => {
  let user = await Profile.findOne({userId: interaction.user.id});
  if (!user) user = await Profile.create({userId: interaction.user.id});
  
  await interaction.reply(
    `>>> <@${user.userId}>`
    +`\n–ë–∞–ª–∞–Ω—Å: ${new Intl.NumberFormat().format(user.balance*1)}`
  );
};

// --- --- --- // --- --- --- // --- --- --- //

const editBalance_Subcommand = async (interaction) => {
  let add = interaction.options.getString('add');
  let remove = interaction.options.getString('remove');
  
  if (!add && !remove) showBalance(interaction);
  else if (add && !remove) await checkBotAdmin(interaction, addBalance);
  else if (!add && remove) await checkBotAdmin(interaction, removeBalanceemove);
  else if (add && remove) interaction.reply({content: '–í—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ, –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–±–∞–≤–∏—Ç—å.', ephemeral: true})
};


const showBalance = async (interaction) => {
  let user = interaction.options.getUser('target');
  if (!user) user = interaction.user;
  
  let profile = await Profile.findOne({userId: user.id});
  if (!profile) profile = await Profile.create({userId: user.id});
  
  await interaction.reply(
    `>>> <@${profile.userId}>`
    +`\n–ë–∞–ª–∞–Ω—Å: ${new Intl.NumberFormat().format(profile.balance*1)}`
  );
};

const addBalance = async (interaction) => {
  let add = interaction.options.getString('add');
  let user = interaction.options.getUser('target');
  if (!user) user = interaction.user;
  
  let profile = await Profile.findOne({userId: user.id});
  if (!profile) profile = await Profile.create({userId: user.id});
  
  await Profile.updateOne(
    {userId: user.id},
    {$set: {balance: profile.balance*1 + add*1}}
  );
  profile = await Profile.findOne({userId: user.id});
  
  await interaction.reply(
    `>>> <@${profile.userId}>`
    +`\n–ë–∞–ª–∞–Ω—Å: ${new Intl.NumberFormat().format(profile.balance*1)}`
  );
};

const removeBalance = async (interaction) => {
  let remove = interaction.options.getString('remove');
  let user = interaction.options.getUser('target');
  if (!user) user = interaction.user;
  
  let profile = await Profile.findOne({userId: user.id});
  if (!profile) profile = await Profile.create({userId: user.id});
  
  let newBalance = profile.balance*1 - remove*1;
  if (newBalance < 0) newBalance = 0;
  
  await Profile.updateOne(
    {userId: user.id},
    {$set: {balance: newBalance}}
  );
  profile = await Profile.findOne({userId: user.id});
  
  await interaction.reply(
    `>>> <@${profile.userId}>`
    +`\n–ë–∞–ª–∞–Ω—Å: ${new Intl.NumberFormat().format(profile.balance*1)}`
  );
};



const checkBotAdmin = async (interaction, functionCallback) => {
  let guildSettings = await GuildSettings.findOne({guildId: interaction.guildId});
  console.log(guildSettings);
  if (guildSettings?.botAdminRoleId != 'none' && !interaction.member.roles.resolve(guildSettings?.botAdminRoleId)) {
    return interaction.reply({
      content: "–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.",
      ephemeral: true
    });
  }
  else {
    functionCallback(interaction);
  }
};

// === /// === /// === // === === === //

/*module.exports.cmd = {
  data: new SlashCommandBuilder()
  .setName('profile')
  .setDescription('.')
  .addSubcommand(subcommand =>
    subcommand
    .setName('show')
    .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å.')
  )
  .addSubcommand(subcommand =>
    subcommand
    .setName('balance')
    .setDescription('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
    .addStringOption(option => option.setName('add').setDescription('–°–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å.\nüõ° –ù—É–∂–Ω–∞ —Ä–æ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º!'))
    .addStringOption(option => option.setName('remove').setDescription('–°–∫–æ–ª—å–∫–æ —É–¥–∞–ª–∏—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞.\nÔ∏èüõ° –ù—É–∂–Ω–∞ —Ä–æ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º!'))
    .addUserOption(option => option.setName('target').setDescription('–ù–∞ –∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.'))
  ),

  async execute(interaction) {
    let subcommand = interaction.options.getSubcommand();
    
    if (subcommand === 'show') showBalance_Subcommand(interaction);
    else if (subcommand === 'balance') editBalance_Subcommand(interaction);
  },
};*/
