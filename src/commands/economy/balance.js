const { SlashCommandBuilder } = require('@discordjs/builders');
const { MessageActionRow, MessageButton } = require('discord.js');

const checkPerms = require(`${__main}/controllers/permissionsController.js`).check;
const icons = require(`${__main}/utils/constants.js`).icons;
const { Guilds, Profile } = require(`${__main}/mongo/index.js`).schemas;
const numbers = new Intl.NumberFormat('de-DE');

const commandName = 'balance';
const permissionsPath = 'economy/balance';

module.exports.help = {
	name: commandName,
	aliases: [ '–±–∞–ª–∞–Ω—Å' ],
	description: [
		 	`_–ö—Ä—á —Ç—É—Ç–∞ –º–æ–∂–Ω–∞ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç–± —Å–∫–æ–ª—å–∫–∞ —É —Ç–∏–±—è –¥–µ–Ω—è—Ö –∏ —Ç—É—Ç–∞ –µ—â–µ –º–æ–∂–Ω–∞ –¥–æ–±–∞–≤–∏—Ç—å –∏ —É–±–∞–≤–∏—Ç—å –¥–µ–Ω—è—Ö, –≤–æ–æ–æ—Ç._`,
		 	`${icons.options1} **–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã:**`,
		 	`„Éª**\`target\`** _(–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –±–µ–∑ —ç—Ç–æ–π –æ–ø—Ü–∏–∏ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –∫–æ–º–∞–Ω–¥—É)_`,
		 	`„Éª**\`add\`** _(–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º)_`,
		 	`„Éª**\`remove\`** _(–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º)_`
	].join('\n')
};

module.exports.slash = (slashCommand) => {
	slashCommand.addSubcommand(subcommand =>
		subcommand.setName(commandName)
		 		.setDescription('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
		 		.addStringOption(option => option.setName('add').setDescription('–°–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å.\nüõ° –ù—É–∂–Ω–∞ —Ä–æ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º!'))			
		 		.addStringOption(option => option.setName('remove').setDescription('–°–∫–æ–ª—å–∫–æ —É–¥–∞–ª–∏—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞.\nÔ∏èüõ° –ù—É–∂–Ω–∞ —Ä–æ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º!'))			
		 		.addUserOption(option => option.setName('target').setDescription('–ù–∞ –∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.'))			
	);
};

module.exports.name = commandName;
module.exports.execute = commandExecution;


async function commandExecution(interaction) {
	const add = interaction.options.getString('add');
	const remove = interaction.options.getString('remove');
	
	if (!add && !remove) await showBalance(interaction);
	if (add && !remove) await addBalance(interaction);
	if (!add && remove) await removeBalance(interaction);
	if (add && remove) interaction.reply({ content: '–í—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ: –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–±–∞–≤–∏—Ç—å.', ephemeral: true });
}


const showBalance = async (interaction) => {
	const user = interaction.options.getUser('target') || interaction.user;
	const profile = await Profile.findOne({userId: user.id}) || await Profile.create({userId: user.id});
  
	await interaction.reply([
 			`>>> <@${profile.userId}>`,
 			`–ë–∞–ª–∞–Ω—Å: ${numbers.format(profile.balance*1)}`
	].join('\n'));
};


const addBalance = async (interaction) => {
	if (!await checkPerms(6, `${permissionsPath}/add`, interaction)) return;
	
	let add = interaction.options.getString('add')*1;
	if (isNaN(add)) add = 0;
	const user = interaction.options.getUser('target') || interaction.user;
	let profile = await Profile.findOne({userId: user.id}) || await Profile.create({userId: user.id});
  
	await Profile.updateOne(
		 	{userId: user.id},
		 	{$set: {balance: profile.balance*1 + add}},
	);
	profile = await Profile.findOne({userId: user.id});
  
	await interaction.reply([
		 	`>>> <@${profile.userId}>`,
		 	`–ë–∞–ª–∞–Ω—Å: ${numbers.format(profile.balance*1)}`
	].join('\n'));
};


const removeBalance = async (interaction) => {
	if (!await checkPerms(6, `${permissionsPath}/remove`, interaction)) return;
	
	let remove = interaction.options.getString('remove')*1;
	if (isNaN(remove)) remove = 0;
	const user = interaction.options.getUser('target') || interaction.user;
	let profile = await Profile.findOne({userId: user.id}) || await Profile.create({userId: user.id});
	
	let newBalance = profile.balance*1 - remove;
	if (newBalance < 0) newBalance = 0;
	
	await Profile.updateOne(
		 	{userId: user.id},
		 	{$set: {balance: newBalance}},
	);
	profile = await Profile.findOne({userId: user.id});
  
	await interaction.reply([
		 	`>>> <@${profile.userId}>`,
		 	`–ë–∞–ª–∞–Ω—Å: ${numbers.format(profile.balance*1)}`
	].join('\n'));
};
